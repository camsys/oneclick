- content_for :title, "#{t(:site_title)} - #{@service.name}"
- temp_rating = @service.ratings.build(user: @traveler)
- can_manage_provider =(can? :manage, :all) || ((can? :full_read, @service) && !current_user.nil? && !@service.provider.nil? && !current_user.provider.nil? && @service.provider.id == current_user.provider.id)

- is_transit = @service.is_transit?
- is_taxi = @service.is_taxi?
- is_paratransit = @service.is_paratransit?

-if can? :index, Service
  .col-sm-12
    = link_to t(:all_services), services_path, class: 'btn action-button btn-arrow-left'
.row.info-header
  .col-sm-5
    %h2
      =@service.name
    - if !@service.active
      %p= @service.deleted_message
  .col-sm-7.btns
    .pull-right
      -if Rating.feedback_on?
        - if can? :read, temp_rating
          = RateableDecorator.decorate(@service).rating_in_stars
          %button.btn.action-button{data: {toggle: 'modal', target: "#feedback_modal"}}
            = t(:feedback)
        - elsif Rating.tripless_feedback?
          -# if creating feedback is allowed, but reading isn't, just load the form into the modal on click
          %button.btn.action-button{data: {toggle: 'modal', target: "#feedback_modal", remote: new_service_rating_path(@service)}}
            = t(:feedback)
        = render partial: "ratings/organization_feedback_modal", locals: {rateable: @service}
      - if @service.active && can_manage_provider and (can? :destroy, @service)
        = button_tag :type => 'button', "data-target" => "#deleteConfirmDialog", "data-toggle" => "modal", :class => "btn action-button", style: "margin-right:5px;" do
          = t(:delete)
      - if !@service.active && can_manage_provider && (can? :destroy, @service)
        = button_tag :type => 'button', "data-target" => "#undeleteServiceConfirmDialog", "data-toggle" => "modal", :class => "btn action-button", style: "margin-right:5px;" do
          = t(:undelete)
        #undeleteServiceConfirmDialog.modal.fade.col-sm-12{"aria-describedby" => t(:restore_service), :role => "dialog", "aria-hidden" => 'true', :tabindex => "-1"}
          .modal-dialog
            .modal-content
              .modal-header
                = button_tag class: 'btn action-button pull-right', data: {dismiss: 'modal'} do
                  = t(:cancel)
                = button_to t(:ok), { action: "undelete", id: @service.id }, method: :patch,  style: "margin-right: 5px;", class: "btn action-button pull-right"
                .modal-title{:style => "text-align:left;"}
                  %b
                    = t(:site_title)
              .modal-body{:style => "text-align:left;"}
                = t(:confirm_restore_message) + " #{@service.name} ?"
      - if can_manage_provider and (can? :update, @service)
        = link_to edit_service_path(@service), {class: 'btn action-button', role: 'button'} do
          = icon_label(:edit)
      - if @service.active && can_manage_provider and (can? :destroy, @service)
        = render partial: 'admin/shared/disable_form', locals: { deleteable: @service }
.row
  = render partial: "public_details", locals: { service: @service}

  -if can_manage_provider
    .col-sm-6
      .panel.panel-default.well0
        .panel-heading
          %h4.panel-title
            = t(:internal_contact)
            = add_tooltip("internal_contact_help")
        .panel-body
          %table.table.table-condensed
            %tr
              %td.text-right
                = t(:name) + ": "
              %td.text-left
                %b= @service.internal_contact_name
            %tr
              %td.text-right
                = t(:title)+": "
              %td.text-left
                %b= @service.internal_contact_title
            %tr
              %td.text-right
                = t(:phone)+ ": "
              %td.text-left
                %b= @service.internal_contact_phone
            %tr
              %td.text-right
                = t(:email)+ ":  "
              %td.text-left
                %b= mail_to @service.internal_contact_email
            - if @contact
              %tr
                %td.text-right
                  = t(:user) + ": "
                %td.text-left
                  %b= @contact.name
-if can_manage_provider
  .row
    - unless is_transit
      .col-sm-4#schedule-panel
        .panel.panel-default.well2
          .panel-heading
            %h4.panel-title
              = t(:schedule)
              = add_tooltip("schedule_help")
          .panel-body
            %table.ALTtable
              %tr
                %th.text-center
                  = t('datetime.prompts.day')
                %th.text-center
                  = t(:start_time)
                %th.text-center
                  = t(:end_time)
              %tbody
                -@service.schedules.order(:day_of_week, :start_seconds, :end_seconds).each do |schedule|
                  %tr
                    %td.text-center
                      = I18n.t('date.day_names')[schedule.day_of_week]

                    %td.text-center
                      =schedule.start_string
                    %td.text-center
                      =schedule.end_string
    - unless is_transit || is_taxi
      .col-sm-4
        .panel.panel-default.well2
          .panel-heading
            %h4.panel-title
              = t(:advance_notice_required)
              = add_tooltip("advance_notice_required_help")
          .panel-body
            %b
              = day_range_to_words(@service.advanced_notice_minutes*60, @service.max_advanced_book_minutes*60)
            =" " + t(:advance_notice_required).downcase + "."
            - # booking cut off times
            %table.ALTtable
              %tr
                %th.text-center
                  = t('datetime.prompts.day')
                %th.text-center
                  = t(:cut_off_time)
              %tbody
                -@service.booking_cut_off_times.order(:day_of_week, :cut_off_seconds).each do |cut_off_time|
                  %tr
                    %td.text-center
                      = I18n.t('date.day_names')[cut_off_time.day_of_week]
                    %td.text-center
                      =cut_off_time.cut_off_time_string
    - unless is_transit
      .col-sm-4
        .panel.panel-default.well2
          .panel-heading
            %h4.panel-title
              = t(:accommodations)
              = add_tooltip("accommodations_help")
          .panel-body
            -if @service.accommodations.count == 0
              = t(:no_accommodations)
            -else
              %ul
                -@service.accommodations.each do |accom|
                  %li
                    =t(accom.name)
  .row
    - unless is_transit || is_taxi
      .col-sm-4
        .panel.panel-default.well1
          .panel-heading
            %h4.panel-title
              = t(:eligibility)
              = add_tooltip("eligibility_help")
            = t(:eligibility_rules_descr)
          .panel-body
            - if @service.service_characteristics.count > 0
              %ul
              - groups = @service.service_characteristics.map(&:group).uniq
              - groups.each do |group|
                %li
                  = @eh.service_characteristics_group_to_s @service.service_characteristics.where(group: group)
            - else
              = t(:no_restriction)

      .col-sm-4
        .panel.panel-default.well1
          .panel-heading
            %h4.panel-title
              = t(:trip_purposes)
              = add_tooltip("trip_purposes_help")
          .panel-body
            -if @service.trip_purposes.count == 0
              = t(:no_restriction)
            -else
              %ul
                -@service.trip_purposes.each do |purpose|
                  %li
                    =t(purpose.name)

    - unless is_transit
      .col-sm-4#fare-panel
        .panel.panel-default{class: "#{is_taxi ? 'well2' : 'well1'}"}
          .panel-heading
            %h4.panel-title
              = t(:fare)
              = add_tooltip("fare_help")
          -@service.fare_structures.each do |fare|
            .panel-body
              - if is_paratransit
                .row_fluid
                  = render partial: 'services/paratransit_fares/show', locals: {fare_structure: fare}
              - else
                .row_fluid
                  %b= t(:base_rate) + ": "
                  -if fare.base
                    = number_to_currency(fare.base.to_f).to_s
                  -else
                    = t(:flat_fare_unavailable) + "."
                .row_fluid
                  %b= t(:taxi_fare_finder_city) + ": "
                  -if @service.taxi_fare_finder_city.present?
                    = @service.taxi_fare_finder_city
                  -else
                    = t(:none)
                .row_fluid
                  - if fare.rate
                    %b= t(:mileage_rate) + ": "
                    = number_to_currency(fare.rate.to_f).to_s
              %b= t(:comments) + ":  "
              -if fare.desc
                = fare.desc.html_safe

  - unless is_transit || is_taxi
    .row
      .col-sm-6
        .panel.panel-default.well3
          .panel-heading
            %h4.panel-title
              = t(:time_window)
              = add_tooltip("time_window_help")
          .panel-body
            = @service.service_window ? t(:service_window) + ": " + @service.service_window.to_s : t(:no_str) + " " + t(:service_window)
            %br
            = @service.time_factor ? t(:time_factor) + ": " + @service.time_factor.to_s : t(:no_str) + " " + t(:time_factor)

      .col-sm-6
        .panel.panel-default.well3
          .panel-heading
            %h4.panel-title
              = t(:booking_information)
              = add_tooltip("booking_information_help")
          .panel-body
            = t(:booking_service_code).to_s + ": " + @service.booking_service_code

  = render partial: 'admin/shared/show_comments', locals: {commentable: @service, can_view_private: can_manage_provider}

  - unless is_transit
    .row
      .col-sm-12
        .panel.panel-default
          .panel-heading
            .row.text-center
              .col-sm-12
                %h3.panel-title
                  = t(:coverage_areas)
                  = add_tooltip("coverage_areas_help")
          .panel-body
            .row
              .col-sm-6
                - types = @service.coverage_areas.map(&:coverage_type).uniq
                - ['endpoints', 'coverages'].each do |rule|
                  .panel.panel-default
                    .panel-heading
                      %h4.panel-title
                        = t(rule)
                        = add_tooltip("#{rule}_help")
                    .panel-body
                      - if rule == 'endpoints' and @service.service_coverage_maps.where(rule: 'endpoint_area').count == 0 and not @service.endpoint_area_geom.nil?
                        =t(:geometry_defined_by_shapefile)
                      - elsif rule == 'coverages' and @service.service_coverage_maps.where(rule: 'coverage_area').count == 0 and not @service.coverage_area_geom.nil?
                        =t(:geometry_defined_by_shapefile)
                      - else
                        - types.each do |type|
                          %b
                            =type.humanize.split[0].pluralize + ' ' + t(:served_areas)
                          .well.white-well.text-left
                            -coverage_string = ""
                            - @service.service_coverage_maps.where(rule: rule.singularize.downcase+'_area').joins(:geo_coverage).order('value').each do |map|
                              -if map.geo_coverage.coverage_type == type
                                -coverage_string += map.geo_coverage.value + ', '
                            -if coverage_string == ""
                              = t(:n_a)
                            -else
                              =coverage_string.chop.chop

              .col-sm-6.text-center
                .panel.panel-default
                  .panel-heading
                    %h4.panel-title
                      = t(:service_area_map)
                      = add_tooltip("service_area_map_help")
                  .sr-only{aria: {label: 'Map.'}} Map.
                  .panel-body{aria: {hidden: 'true'}}
                    %div

                    = LeafletMap({ :mapid => "lmap_" + "endpoint_area", :multipolygons => @polylines,
                    :tile_provider => 'GOOGLEMAP', :min_zoom => 3, :max_zoom => 15,
                    :style => "height:500px;" })

= yield :scripts

:javascript
  boxes = $('.well0');
  maxHeight = Math.max.apply(
    Math, boxes.map(function() {
      return $(this).height();
  }).get());
  boxes.height(maxHeight);

  boxes = $('.well1');
  maxHeight = Math.max.apply(
    Math, boxes.map(function() {
      return $(this).height();
  }).get());
  boxes.height(maxHeight);

  boxes = $('.well2');
  maxHeight = Math.max.apply(
    Math, boxes.map(function() {
      return $(this).height();
  }).get());
  boxes.height(maxHeight);

  boxes = $('.well3');
  maxHeight = Math.max.apply(
    Math, boxes.map(function() {
      return $(this).height();
  }).get());
  boxes.height(maxHeight);

  if ("#{is_taxi}" == 'true') {
    el = $('#fare-panel').detach();
    $('#schedule-panel').closest('.row').append(el);
  }
