=simple_form_for @user, :html => { :class => "form-horizontal"}, method: 'post', wrapper: :horizontal_form, wrapper_mappings: { check_boxes: :horizontal_radio_and_checkboxes, radio_buttons: :horizontal_radio_and_checkboxes, file: :horizontal_file_input, boolean: :horizontal_boolean }, :include_blank => false  do |f|
  = f.error_notification message: print_messages(f)
  %div{role: "main", aria: {label: "Travel Profile"}}
    .row.info-header
      .col-sm-6
        %h1
          = current_user != @user ? "#{@user.name}'s #{translate_helper_translate(:travel_profile)}" : translate_helper_translate(:travel_profile)
      .col-sm-6.btns
        .pull-right{style: 'padding-bottom:4px;'}
          = f.button :submit, translate_helper_translate(:apply), class: "btn action-button"
          = link_to translate_helper_translate(:cancel), :back, class: "btn action-button"

    .row
      .col-sm-6
        .panel.panel-default#user_info
          .panel-heading
            %h2.panel-title
              = translate_helper_translate(:user_information)
              = add_tooltip("user_information_help")
          .panel-body
            = f.input :first_name, label: translate_helper_translate(:first_name), :autofocus => true, :required => true
            - if translation_exists?("first_name_help")
              :javascript
                addHelperTooltip('#first_name_label', "#{translate_helper_translate(:first_name_help)}");

            = f.input :last_name, label: translate_helper_translate(:last_name), :required => true
            - if translation_exists?("last_name_help")
              :javascript
                addHelperTooltip('#last_name_label', "#{translate_helper_translate(:last_name_help)}");

            = f.input :title, label: translate_helper_translate(:title), :required => false
            - if translation_exists?("title_help")
              :javascript
                addHelperTooltip('#title_label', "#{translate_helper_translate(:title_help)}");

            = f.input :email, label: translate_helper_translate(:email), :required => true
            - if translation_exists?("email_help")
              :javascript
                addHelperTooltip('#email_label', "#{translate_helper_translate(:email_help)}");

            - if is_admin?
              = f.input :roles, label: "#{translate_helper_translate(:admin)}?", collection: Role.order(:name).reject{|role| role.name != "system_administrator"}, as: :check_boxes, label_method: lambda {|t| translate_helper_translate(:yes_str)}, checked: (@user.has_role?(:system_administrator) ? 1 : "")
              - if translation_exists?("role_help")
                :javascript
                  addHelperTooltip('#roles_label', "#{translate_helper_translate(:role_help)}");

            = f.input :phone, label: translate_helper_translate(:phone), :required => false
            - if translation_exists?("phone_help")
              :javascript
                addHelperTooltip('#phone_label', "#{translate_helper_translate(:phone_help)}");

            = f.input :preferred_locale, label: translate_helper_translate(:preferred_locale), :collection => Translation.available_locales, :include_blank => false, label_method: lambda {|pl| I18n.translate_helper_translate("locales.#{pl}")}
            - if translation_exists?("preferred_locale_help")
              :javascript
                addHelperTooltip('#preferred_locale_label', "#{translate_helper_translate(:preferred_locale_help)}");

            = f.input :password, label: translate_helper_translate(:password), :autocomplete => "off", :required => false, label_html: {"aria-label" => "Password. Leave this as well as the password confirmation blank if you do not want to change your password."}
            - if translation_exists?("password_help")
              :javascript
                addHelperTooltip('#password_label', "#{translate_helper_translate(:password_help)}");

            = f.input :password_confirmation, label: translate_helper_translate(:password_confirmation), :hint => translate_helper_translate(:leave_password_blank), :required => false
            = f.input :walking_speed_id, :collection =>  WalkingSpeed.all, :selected => get_selected_walking_speed_id(@user), :value => :id, :label_method => lambda { |v| v.label}, label: translate_helper_translate(:walking_speed), input_html: { class: 'form-control' }
            - if translation_exists?("walking_speed_help")
              :javascript
                addHelperTooltip('#walking_speed_id_label', "#{translate_helper_translate(:walking_speed_help)}");

            = f.input :walking_maximum_distance_id, :collection =>  WalkingMaximumDistance.all, :selected => get_selected_walking_max_distance_id(@user), :value => :id, :label_method => lambda { |v| v.label}, label: translate_helper_translate(:walking_maximum_distance), input_html: { class: 'form-control' }
            - if translation_exists?("walking_maximum_distance_help")
              :javascript
                addHelperTooltip('#walking_maximum_distance_id_label', "#{translate_helper_translate(:walking_maximum_distance_help)}");

            = f.input :maximum_wait_time, label: "#{translate_helper_translate(:maximum_wait_time)} (#{translate_helper_translate(:minutes)})", as: :integer, input_html: { value: @user.max_wait_time, min: '0'}
            - if translation_exists?("maximum_wait_time_help")
              :javascript
                addHelperTooltip('#maximum_wait_time_label', "#{translate_helper_translate(:maximum_wait_time_help)}");

      - if can? :full_read, @user
        .col-sm-6
          .panel.panel-default#agencies
            .panel-heading
              %h2.panel-title
                = translate_helper_translate(:agencies)
                = add_tooltip("agencies_help")
            .panel-body
              / %label.sr-only{aria: {label: "#{translate_helper_translate(:agencies)}"}}
              / - Agency.all.order(:name).each do |agency|
              /   %div
              /     %input.check_boxes.optional{id: "user_approved_agency_ids_#{agency.id}", name: "user[approved_agency_ids][]", type: "checkbox", size: 10, value: "#{agency.id}"}
              /     %label.check_boxes.optional{for: "user_approved_agency_ids_#{agency.id}", name: "user[approved_agency_ids]"} #{agency}
              /     %br

              = f.association :approved_agencies, collection: Agency.active.order(:name), input_html: {size: 10}, value_method: :agency_id,  as: :check_boxes, wrapper: :inline_checkboxes, label: translate_helper_translate(:agencies), label_html: {class: 'sr-only'}

    - if current_user.agency
      .row
        .col-sm-12
          .panel.panel-default
            .panel-heading
              %h2.panel-title
                =translate_helper_translate(:traveler_notes)
                = add_tooltip("traveler_notes_help")
            .panel-body
              -traveler_note = TravelerNote.where(user: @user, agency: current_user.agency).first_or_create
              =simple_fields_for traveler_note, html: {class: 'form-horizontal'}, wrapper: :h_opts_form do |note_form|
                =note_form.input :note, :input_html => {:cols => 20}, :label => false
              =translate_helper_translate(:only_agency_can_see, :agency => current_user.agency.name)

    - if can? :full_read, @user
      .new_buddies.hidden
        = select_tag "new_buddies", "", multiple: true, as: :hidden
      .row
        .col-sm-12
          .panel.panel-default#buddies
            .panel-heading
              %h2.panel-title
                = translate_helper_translate(:buddies)
                = add_tooltip("buddies_help")
            .panel-body
              .table-flash
              %button#add_buddy_btn.btn.action-button.pull-right{data: {toggle: 'modal', target: '#add_user'}}
                = translate_helper_translate(:add)
              %table.table.table.condensed.table-striped.table-hover.table-bordered#buddies_table
                %thead
                  %th= translate_helper_translate(:buddy)
                  %th.email= translate_helper_translate(:email)
                  %th= translate_helper_translate(:can_assist_me)
                  %th= translate_helper_translate(:i_can_assist)
                %tbody
                  -# initial load from user record
                  - @user.related_users.each do |ou|
                    = render partial: 'users/buddy_traveler_row', locals: {urp: UserRelationshipProxy.new(@user, ou)}
              #add_user.modal.fade{:role => "dialog", "aria-hidden" => 'true', :tabindex => "-1"}
                .modal-dialog.modal-lg
                  .modal-content
                    .modal-header
                      .row
                        .col-sm-12
                          .pull-right
                            %button.btn.action-button#search
                              = translate_helper_translate(:apply)
                            %button.btn.action-button{data: {dismiss: 'modal'}}
                              = translate_helper_translate(:cancel)
                    .modal-body
                      .modal-flash
                      .panel.panel-default
                        .panel-heading
                          %h2.panel-title
                            = translate_helper_translate(:find_traveler)
                            = add_tooltip("find_traveler_help")
                        .panel-body
                          .row
                            .col-sm-12
                              = label_tag :email, translate_helper_translate(:email)
                              = text_field_tag :email,nil


    - if can? :full_read, @user
      = simple_fields_for @user_characteristics_proxy, html: {class: 'form-horizontal'}, wrapper: :h_opts_form, wrapper_mappings: {check_boxes: :h_opts_radio_and_checkboxes, radio_buttons: :h_opts_radio_and_checkboxes, file: :h_opts_file_input, boolean: :h_opts_boolean }  do |characteristic_form|
        .row
          .col-sm-6.pull-left
            .panel.panel-default
              .panel-heading
                %h2.panel-title
                  = translate_helper_translate(:eligibility)
                  = add_tooltip("eligibility_help")
              .panel-body
                - Characteristic.active.enabled.each do |c|
                  - next if c.code=='age' # TODO kludge
                  - next unless c.ask_early
                  - case c.datatype
                  - when 'bool'
                    %fieldset
                      .form-group.radio_buttons.optional#input_container{class: "user_characteristics_proxy_#{c.code}"}
                        %legend.col-sm-7.radio_buttons.optional.control-label{id: "#{c.code}_label"}
                          = translate_helper_translate(c.note)
                          = add_tooltip("#{c.code}_help")
                          :javascript
                            $('#input_container .label-help').removeClass('fa-2x');
                        .col-sm-5#eligibility_questions
                          %input.radio_buttons.optional{id: "user_characteristics_proxy_#{c.code}_true", name: "user_characteristics_proxy[#{c.code}]", type: "radio", value: "true", checked: c.true_false_checked?(@traveler, "true") }
                          %label{for: "user_characteristics_proxy_#{c.code}_true", name: "user_characteristics_proxy[#{c.code}]"} #{translate_helper_translate(:yes_str)}

                          %input.radio_buttons.optional{id: "user_characteristics_proxy_#{c.code}_false", name: "user_characteristics_proxy[#{c.code}]", type: "radio", value: "false", checked: c.true_false_checked?(@traveler, "false") }
                          %label{for: "user_characteristics_proxy_#{c.code}_false", name: "user_characteristics_proxy[#{c.code}]"} #{translate_helper_translate(:no_str)}

                          %input.radio_buttons.optional{id: "user_characteristics_proxy_#{c.code}_na", name: "user_characteristics_proxy[#{c.code}]", type: "radio", value: "na", checked: c.na_checked?(@traveler) }
                          %label{for: "user_characteristics_proxy_#{c.code}_na", name: "user_characteristics_proxy[#{c.code}]"} #{translate_helper_translate(:not_sure_str)}
                  - else
                    = characteristic_form.input c.code.to_sym, label: translate_helper_translate(c.note)
          .col-sm-6.pull-right
            .panel.panel-default
              .panel-heading
                %h2.panel-title
                  = translate_helper_translate(:accommodations)
                  = add_tooltip("accommodations_help")
              .panel-body
                -Accommodation.where(:datatype => 'bool').each do |a|
                  %fieldset
                    .form-group.radio_buttons.optional#input_container{class: "user_characteristics_proxy_#{a.code}"}
                      %legend.col-sm-7.radio_buttons.optional.control-label{id: "#{a.code}_label"}
                        = translate_helper_translate(a.note)
                        = add_tooltip("#{a.code}_help")
                        :javascript
                          $('#input_container .label-help').removeClass('fa-2x');
                      .col-sm-5#eligibility_questions
                        %input.radio_buttons.optional{id: "user_characteristics_proxy_#{a.code}_true", name: "user_characteristics_proxy[#{a.code}]", type: "radio", value: "true", checked: a.true_false_checked?(@traveler, "true") }
                        %label{for: "user_characteristics_proxy_#{a.code}_true", name: "user_characteristics_proxy[#{a.code}]"} #{translate_helper_translate(:yes_str)}

                        %input.radio_buttons.optional{id: "user_characteristics_proxy_#{a.code}_false", name: "user_characteristics_proxy[#{a.code}]", type: "radio", value: "false", checked: a.true_false_checked?(@traveler, "false") }
                        %label{for: "user_characteristics_proxy_#{a.code}_false", name: "user_characteristics_proxy[#{a.code}]"} #{translate_helper_translate(:no_str)}

                        %input.radio_buttons.optional{id: "user_characteristics_proxy_#{a.code}_na", name: "user_characteristics_proxy[#{a.code}]", type: "radio", value: "na", checked: a.na_checked?(@traveler) }
                        %label{for: "user_characteristics_proxy_#{a.code}_na", name: "user_characteristics_proxy[#{a.code}]"} #{translate_helper_translate(:not_sure_str)}

      .row
        .col-sm-6
          .panel.panel-default#booking
            .panel-heading
              %h2.panel-title
                =translate_helper_translate(:booking_information)
                = add_tooltip("booking_information_help")
            .panel-body
              =simple_fields_for :user_service, html: {class: 'form-horizontal'}, wrapper: :h_opts_form do |booking_form|
                -Service.active.bookable.each do |service|
                  - user_service = UserService.where(service: service, user_profile: @user.user_profile).first
                  - if user_service
                    = booking_form.input service.id.to_s, label: service.name, input_html: { value: user_service.external_user_id}
                  - else
                    = booking_form.input service.id.to_s, label: service.name, input_html: { value: "" }
                =booking_form.input :dob, label: translate_helper_translate(:dob), placeholder: "mm/dd/yyyy", hint: translate_helper_translate(:dob_notice)
                - if translation_exists?("dob_help")
                  :javascript
                    addHelperTooltip('#dob_label', "#{translate_helper_translate(:dob_help)}");
        .col-sm-6
          .panel.panel-default#preferred_modes
            .panel-heading
              %h2.panel-title
                = translate_helper_translate(:preferred_modes)
                = add_tooltip("preferred_modes_help")
            .panel-body
              %legend.sr-only= translate_helper_translate(:preferred_modes)
              - Mode.top_level.where(visible: true).sort{|a, b| I18n.translate_helper_translate(a.name) <=> I18n.translate_helper_translate(b.name)}.each do |m|
                .row
                  .col-sm-12
                    = check_box_tag "user[preferred_mode_ids][#{m.id}]", m.id, @user.preferred_modes.include?(m), name: "user[preferred_mode_ids][]"
                    = label_tag "user[preferred_mode_ids][#{m.id}]", translate_helper_translate(m.name)
                    - m.submodes.where(visible: true).each do |sm|
                      .row
                        .col-sm-12.col-sm-push-1
                          = check_box_tag "user[preferred_mode_ids][#{sm.id}]", sm.id, @user.preferred_modes.include?(sm), name: "user[preferred_mode_ids][]"
                          = label_tag "user[preferred_mode_ids][#{sm.id}]", translate_helper_translate(sm.name)

:javascript
  $(document).ready(function() {
    $('#user_password_confirmation').siblings(1).attr('aria-hidden', 'true');
    $('#buddies_table').dataTable( {
          stateSave: true,
          "oLanguage": {
            "sLengthMenu": "Display _MENU_ buddies per page",
            "sZeroRecords": "Nothing found - sorry",
            "sInfo": "Showing _START_ to _END_ of _TOTAL_ buddies",
            "sInfoEmpty": "Showing 0 to 0 of 0 buddies",
            "sInfoFiltered": "(filtered from _MAX_ total buddies)"
          },
          "bAutoWidth": false,
          "aoColumns": [
            {"sWidth": "30%"},
            {"sWidth": "30%"},
            {"sWidth": "20%"},
            {"sWidth": "20%"},
          ],
          "sDom": "<'row'<'col-sm-6'f>><'row'<'col-sm-6'l>r>t<'row'<'col-sm-6'i><'col-sm-6'p>>"
      } );
      $("#add_buddy_btn").on("click", function(e) {
        e.preventDefault ? e.preventDefaultranslate_helper_translate() : e.returnValue = false;
      });
      $("#search").on("click", function(e) {
        e.preventDefault ? e.preventDefaultranslate_helper_translate() : e.returnValue = false;
        $.ajax({
          url: "find_by_email",
          data: {email: $("#email").val()},
          dataType: "json",
          success: function(data) {
            if (data["success"]) {
              $(".modal").modal("toggle");
              $("div.table-flash").html(data["msg"]).addClass("alert alert-success fade-in");
              $(".new_buddies select").append("<option selected value=" + data["output"] + ">"+ data["output"] + "</option>")
              //find row
              var row = $("td.email:contains('" + data["row"][1] +"')").parentranslate_helper_translate();
              // Update if exists.  Add if not
              if (row.length) {
                $("#buddies_table").dataTable().fnUpdate( data["row"], row[0]);
              }
              else {
                $( "#buddies_table" ).dataTable().fnAddData(data["row"]);
              }
            } else {
              $("div.modal-flash").html(data["msg"]).addClass("alert alert-success fade-in");
            }
          }
        });
      });
      $('#email').on('keypress', function(e){
        if(e.keyCode == 13) {
          e.preventDefault ? e.preventDefaultranslate_helper_translate() : e.returnValue = false;
          $('#search').click();
        }
      });
    $("td button.action-button").on("click", function(e) {
      e.preventDefault ? e.preventDefaultranslate_helper_translate() : e.returnValue = false;

      $.ajax({
        url: $(this).data("source"),
        dataType: "json",
        success: function(data) {
          if (data["success"]){
            $("#user_relationship_" + data["rel_id"]).children("option[value=" + data["status_id"] +"]").prop("selected", true);}
            $("td[data-rel=" + data["rel_id"] + "]").children("button").remove();
            $("td[data-rel=" + data["rel_id"] + "]").append("<p>Update Pending...</p>"); // Needs i18n
        }
      });
    });
    $("#preferred_modes input").change(function() {
      var checked = $(this).prop("checked")
      $(this).parentranslate_helper_translate().find("input").prop("checked", checked);
    });
  });
