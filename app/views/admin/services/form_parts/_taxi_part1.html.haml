- this_path = "admin/services/form_parts/taxi_part1"
- form_index = 1
- active = local_assigns[:active].nil? ? false : active
- service_id = new_service ? "new-#{mode}" : service.id
- has_coverages = service.primary_coverage.present? || service.secondary_coverage.present?

= simple_form_for service || :service,
        url: new_service ? admin_provider_services_path(@provider) : admin_provider_service_path(@provider, service_id),
        remote: true,
        html: { class: 'form-vertical service-details-form', multipart: true },
        data: {type: :html, "service-id" => service_id, "form-index" => form_index},
        authenticity_token: true,
        wrapper: :vertical_form do |f|
  = f.error_notification message: print_messages(f)
  = render partial: "admin/services/form_parts/service_details_form_buttons", locals: {f:f}

  -# Hidden Input tells the controller which partial to send back.
  %input.hidden{name: "service_details_partial", type: "text", value: this_path }

  - custom_primary = service.primary_coverage && service.primary_coverage.custom_shape
  - if custom_primary
    = f.input :primary_coverage_custom,
        label: translate_helper(:taxi_coverage_area),
        placeholder: "(custom shape)",
        input_html: { value: "", readonly: true }
  - else
    = f.input :primary_coverage_recipe, as: :text,
        label: translate_helper(:taxi_coverage_area),
        placeholder: translate_helper(:coverage_area_placeholder),
        input_html: { value: service.primary_coverage ? service.primary_coverage.recipe : "" }

  -if has_coverages
    = LeafletMap({ :mapid => "lmap_service_area_#{service.id}",
      :multipolygons => service.coverage_area_polygons,
      :tile_provider => 'GOOGLEMAP',
      :min_zoom => 3,
      :max_zoom => 15,
      :style => "height:500px;",
      :do_not_show_map => true })

:javascript
  $(document).ready(function() {

    // Setup form, setting parameters via (ruby) string interpolation
    var form = new ServiceForm("#{service_id}", "#{form_index}", ("#{new_service}" === "true"));

    // Handle Map Display if there are coverages for this service
    if(#{has_coverages}) {
      var theMap = CsMaps['lmap_service_area_#{service_id}'];

      // Handler to show map on section expand (only needs to fire once, hence 'one')
      form.$().closest('.collapsible').one('shown.bs.collapse', function() {
        if(theMap) {theMap.showMap()};
      });

      // Show map if form is un-collapsed on page load
      if(form.$().closest('.collapsible').hasClass('in')) {
        if(theMap) {theMap.showMap()};
      };
    }

  });
