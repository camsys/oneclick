/MODAL STUFF
#feedbackModal.modal.fade.col-sm-12{:role => "dialog", :tabindex => "-1"}
  .modal-dialog
    .modal-content
      .modal-body
        = simple_form_for Feedback.new, url: feedbacks_path, method: :post, remote: true, input_html: {multipart: true} do |f|
          = f.hidden_field :user_id, value: current_user.id if current_user
          = f.hidden_field :trip_id, value: nil
          = f.input :feedback_type_id, collection: @feedback_types, label: translate_helper(:type_of_feedback), include_blank: true
          #ratings
          #issues
          = f.input :comment, label: translate_helper(:comment)
          = f.input :user_email, label: translate_helper(:email), input_html: {value: user_signed_in? ? current_user.email : ''}
          .row.text-right{style: "margin-right:0;"}
            = button_tag type: :submit, class: 'btn action-button controls', id: 'save_feedback' do
              = translate_helper(:save)
            %button.btn.action-button{data: {dismiss: 'modal'}}
              = translate_helper(:cancel)

:javascript
  $(document).ready(function(){
    $('#feedback_feedback_type_id').on('change', function(){
      if ( $(this).val().length > 0 ) {
        $.ajax({
          url: '/feedbacks/get_ratings_and_issues',
          type: 'GET',
          dataType: 'script',
          data: { feedback_type: $('#feedback_feedback_type_id option:selected').val() },
          success: function() { $('label[for*=value_0]').hide(); }
        });
      } else {
        $('#ratings, #issues').empty();
      }
    });
    $('#feedbackModal').on('show.bs.modal', function(){
      feedbackType = "#{FeedbackType.find_by(name: 'application').id}";
      $(this).find('#feedback_trip_id').val("#{params[:id]}");
      $(this).find('#feedback_feedback_type_id').val(feedbackType).trigger('change');
    });
  }).ajaxSuccess(function(e, xhr, settings){
    if (settings.url.endsWith('feedbacks')) {
      parentModal = $(e.target.activeElement).parents('.modal');
      form = parentModal.find('#new_feedback').detach();
      modalBody = parentModal.find('.modal-body');

      modalBody.append("<div class='text-center'><label>#{translate_helper(:thanks_for_the_feedback)}</label></div>");
      setTimeout(function(){ parentModal.modal('hide') }, 2000);
      parentModal.on('hidden.bs.modal', function(){
        modalBody.empty().append(form);
        $('form#new_feedback').trigger('reset');
      });
    }
  }).ajaxError(function(e, xhr, settings, err){
    if (xhr.responseText) {
      console.log([e, xhr, settings, err]);
      feedbackErrors = JSON.parse(xhr.responseText);
      $.each(feedbackErrors, function(k,v){
        $("div[class*=" + k + "]").addClass('has-error');
        $("#feedbackModal [id$=" + k + "]").siblings('p').remove();
        $("#feedbackModal [id$=" + k + "]").parent().append("<p>#{translate_helper(:presence_msg)}</p>");
      });
    }
  });
