- label= t(dir)
- ad = "#{dir}_arrive_depart"
- field = "#{dir}_trip_date".to_sym
- time_field = "#{dir}_trip_time".to_sym
- other = (dir == "outbound") ? 'return' : 'outbound'

%label.sr-only{for: "trip_proxy_#{dir}_arrive_depart"}= "#{dir} trip. arriving by/departing at"
%label.col-md-3.control-label{id: "#{dir}_label", :aria => {:hidden => "true"}}
  = label

.col-md-3
  -# Note that the collection assumes that the departing_at option evaluates as true in the proxy.  This should mirror trip_part.is_depart behavior
  = f.input ad, wrapper: :horizontal_labelless_select, collection: [[t(:arriving_by), false], [t(:departing_at), true]], include_blank: false, label_method: :first, value_method: :last
  - if dir=='outbound' && translation_exists?("outbound_help")
    :javascript
      addHelperTooltip('#outbound_label', "#{t(:outbound_help)}");
  - elsif dir=='return' && translation_exists?("return_help")
    :javascript
      addHelperTooltip('#return_label', "#{t(:return_help)}");

.col-md-6{:style => "padding: 0px;"}

  %label.sr-only{for: "trip_proxy_#{dir}_trip_date"}= "#{dir} trip date"
  = f.input field, label: false, wrapper: :trip_dates do
    - if mobile?
      = f.input_field field, type: :date, class: 'form-control', id: "trip_proxy_#{dir}_trip_date", autocomplete: 'off'
    - else
      = f.input_field field, class: 'form-control', id: "trip_proxy_#{dir}_trip_date", autocomplete: 'off'

  %label.sr-only{for: "trip_proxy_#{dir}_trip_time"}= "#{dir} trip time"
  = f.input time_field, label: false, wrapper: :trip_dates do
    - if mobile?
      = f.input_field time_field, type: :time, class: 'form-control', id: "trip_proxy_#{dir}_trip_time", autocomplete: 'off'
    - else
      = f.input_field time_field, class: 'form-control', id: "trip_proxy_#{dir}_trip_time", autocomplete: 'off'

  - unless mobile?
    / The <script> for date&time picker
    :javascript
      $('#trip_proxy_#{dir}_trip_date').datetimepicker({
        defaultDate: new Date(),
        minDate: moment(0, "HH"),
        format: 'MM/DD/YYYY'
      });

      $('#trip_proxy_#{dir}_trip_time').datetimepicker({
        defaultDate: moment().next15(),
        format: 'h:mm A'
      });

