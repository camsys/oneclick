#eligibility_form

  .row-fluid
    .span12
      = simple_form_for @user_characteristics_proxy, :url => path, :method => 'put', :remote => not(inline)  do |f|
        = f.error_notification
        .eligibility-question{ :data => {:index => 0}}
          = render partial: 'characteristics/eligibility_alert', locals: {inline: inline}
        %div{ :data => {:index => 1}}
          .input-header
            .step-number
            .step-title Questions
          .pull-right
            %table#characteristics_one
              %thead 
                %tr 
                  %th 
                  %th Yes
                  %th No
                  %th Unsure
              %tbody 
                -TravelerCharacteristic.personal_factors.where(:datatype => 'bool').each do |characteristic|
                  %tr 
                    %td
                      = f.label characteristic.note 
                    %td 
                      = f.radio_button characteristic.code.to_sym, true
                      = f.label characteristic.code.to_sym, nil, :text => nil, :class => 'yes', :value => true
                    %td 
                      = f.radio_button characteristic.code.to_sym, false
                      = f.label characteristic.code.to_sym, nil, :text => nil, :class => 'no', :value => false
                    %td 
                      = f.radio_button characteristic.code.to_sym, "na"
                      = f.label characteristic.code.to_sym, nil, :text => nil, :class => 'unsure', :value => "na"
                -TravelerCharacteristic.personal_factors.where(:datatype => 'disabled').each do |characteristic|
                  %tr 
                    %td
                      = f.label characteristic.note + " (not yet available)", :class => 'disabled'
                    %td 
                      = f.radio_button characteristic.code.to_sym, true, :disabled => true
                      = f.label characteristic.code.to_sym, nil, :text => nil, :class => 'yes disabled', :value => true, disabled: true
                    %td 
                      = f.radio_button characteristic.code.to_sym, false, :disabled => true
                      = f.label characteristic.code.to_sym, nil, :text => nil, :class => 'no disabled', :value => false, disabled: true
                    %td 
                      = f.radio_button characteristic.code.to_sym, "na", :disabled => true
                      = f.label characteristic.code.to_sym, nil, :text => nil, :class => 'unsure disabled', :value => "na", disabled: true
      

        / -TravelerCharacteristic.personal_factors.where(:datatype => 'disabled').each do |characteristic|
        /   = f.input characteristic.code.to_sym, collection: [[true, 'Yes'], [false, 'No'], ['na', 'Not sure']], :required => false, as: :radio_buttons, label: characteristic.note + " (not yet available)", label_method: :last, value_method: :first, :item_wrapper_class => "inline", disabled: true
        .dob-temp{ :data => {:index => 2}}
          = f.input :date_of_birth, :as => :date, :start_year => Date.today.year - 12, :end_year => 1900, :required => false, :prompt => %w[t(:month) t(:day) t(:year)], :input_html => {:style => "width:auto;"}
        
        - if inline
          = button_tag :type => 'submit', :class => "btn btn-primary hidden" do
            %i.icon.icon-arrow-right
            Next step
            / = t(:save)
        - else
          = button_tag type: :submit, class: 'btn btn-primary controls hidden' do
            %i.icon.icon-ok
            = t(:update)
        = link_to :back, :class => "cancel_link hidden" do
          %i.icon.icon-reply
          = t(:cancel)

  / SO...somehow we gotta get that to look like this.
        
:javascript
  $(document).ready(function() { 


    characteristicsView = {};
    characteristicsView.indexCounter = 0;
    characteristicsView.formItems = [];

    characteristicsView.nextBtnHandler = function() {
      if(characteristicsView.indexCounter == 0){
        $('div.next-footer-container').removeClass('hidden');
        //add the new copy for the questions section
        $('.info p').html("Answer all questions you are comfortable providing an answer for. If you do not wish to answer a question, select \"Unsure\". Answering these questions will ensure you see personalized travel options. <br><br> Tap \"Next Step\" when you have finished with these questions.");
      }
      if(characteristicsView.indexCounter == 1){
        //copy for the birthday section
        $('.info h4').html('Tell us your Date of Birth');
        $('.info p').html("Sharing your birthdate allows us to provide you with the best travel options, including those that may be discounted or only available to seniors.<br><br>Tap \"Next Step\" when you have selected the correct date.");
      }
      if(characteristicsView.indexCounter == 2){
        $('#new_user_characteristics_proxy').submit();
      }
      //increment counter
      characteristicsView.indexCounter++;
      
      //trigger counter change event
      $('#eligibility_form').trigger('indexChange')
    }

    characteristicsView.indexChangeHandler = function() {
      //hide everything again
      characteristicsView.formItems.addClass('hidden');

      //find element matching current index
      var matchedElement = $('div[data-index="' + characteristicsView.indexCounter +  '"]');

      // matched element visible
      matchedElement.removeClass('hidden');
    }
  
    characteristicsView.init = function() {
      //cache all form items
      this.formItems = $('*[data-index]');
      this.formItems.addClass('hidden');
      
      
      $('#eligibility_form').on('indexChange', characteristicsView.indexChangeHandler);

      
      //add click handler to next button
      $('.next-step-btn, a#yes').on('click', characteristicsView.nextBtnHandler);

      //reveal first form item
      $('div[data-index="0"]').removeClass('hidden');

      
      $('input[name="user_characteristics_proxy[disabled]"]:radio').on('change', function(event) {
        $.ajax({
          url: 'header',
          data: {state: event.currentTarget.id},
          success: function(result) {
            $('#characteristics_header').html(result)
          }
        });
      });
    }

    //kick everything off
    characteristicsView.init();
    
  });
  
  



