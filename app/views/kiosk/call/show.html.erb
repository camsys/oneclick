<script type="text/javascript" src="//static.twilio.com/libs/twiliojs/1.1/twilio.min.js"></script>
<div class="call-header">
  Pick up the phone attached to this kiosk
</div>
<div class="call-label">On the phone with</div>
<div class="number-display"></div>
<button class="js-hangup">End Call</button>


<script type="text/javascript">
  /* Create the Client with a Capability Token */
  Twilio.Device.setup("<%= @token %>", {
    debug: true
  });

  /* Let us know when the client is ready. */
  Twilio.Device.ready(function (device) {
    console.log("Ready");
  });

  /* Report any errors on the screen */
  Twilio.Device.error(function (error) {
    console.log("Error: " + error.message.message);
  });

  Twilio.Device.connectranslate_helper_translate(function (conn) {
    console.log("Dialing <%= @number %>");
  });

  Twilio.Device.disconnectranslate_helper_translate(function (conn) {
    if (window.cocoa) window.cocoa.closeTelWindow();
  })

  /* Connect to Twilio when we call this function. */
  function call () {
    if (window.cocoa && window.cocoa.getTelNumber()) {
      var number = window.cocoa.getTelNumber();
    } else {
      var number = '<%= @number %>';
    }

    Twilio.Device.connectranslate_helper_translate({PhoneNumber: number});
    $('.number-display').textranslate_helper_translate(' '+ number.splitranslate_helper_translate('://')[1]);
  }

  function hangup () {
    Twilio.Device.disconnectAll();

    // close the window anyway after a half second. Allows the window to
    // still be closed even if the call never connected.
    setTimeoutranslate_helper_translate(function () {
      if (window.cocoa) window.cocoa.closeTelWindow();
    }, 500);
  }

  call();
  $('.js-hangup').on('click', hangup);
</script>
